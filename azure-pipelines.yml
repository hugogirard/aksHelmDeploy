# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'hg28acr'
  imageRepository: 'todoapi'
  containerRegistry: 'hg28acr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/src/TodoApi/Dockerfile'
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  pool:
    vmImage: $(vmImageName)
  jobs:
  - job: ReplaceToken
    displayName: ReplaceToken
    steps:
      - task: replacetokens@3
        displayName: Replace Token Helm Chart
        inputs:
          targetFiles: 'k8s/todoapi/*.yaml'
          encoding: 'auto'
          writeBOM: true
          actionOnMissing: 'warn'
          keepToken: false
          tokenPrefix: '__'
          tokenSuffix: '__'
          useLegacyPattern: false
          enableTelemetry: true
  - job: Build
    displayName: Build
    dependsOn: ReplaceToken
    steps:
      - task: Docker@2
        displayName: Build and push an image to container registry
        inputs:
          command: buildAndPush
          repository: $(imageRepository)
          dockerfile: $(dockerfilePath)
          containerRegistry: $(dockerRegistryServiceConnection)
          tags: |
            $(tag)
  - job: PublishArtifact
    displayName: Publish Helm Chart
    dependsOn: Build
    steps:
      - task: CopyFiles@2
        displayName: Copy Helm Chart
        inputs:
          Contents: 'k8s/todoapi/**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      - task: PublishBuildArtifacts@1
        displayName: Publish Helm Chart
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'chart'
          publishLocation: 'Container'
- stage: Deploy
  displayName: Deploy Helm Chart
  dependsOn: Build
  variables:
    aksConnection: 'dev-hg28-k8s-default-1610303991208'
  pool:
    vmImage: $(vmImageName)           
  jobs:      
    - deployment: Deploy
      displayName: Deploy Helm Chart
      environment: 'dev'
      strategy:
       runOnce:
         deploy:
           steps:
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'chart'
                downloadPath: '$(System.ArtifactsDirectory)'
            - task: HelmDeploy@0
              displayName: List installed package
              inputs:
                connectionType: 'Kubernetes Service Connection'
                kubernetesServiceConnection: $(aksConnection)
                command: 'ls'
            - task: HelmDeploy@0
              displayName: Deploy new package version
              inputs:
                connectionType: 'Kubernetes Service Connection'
                kubernetesServiceConnection: $(aksConnection)
                command: 'upgrade'
                chartType: 'FilePath'
                chartPath: '$(System.ArtifactsDirectory)/chart/k8s/todoapi'